{"version":3,"sources":["store/Reducers/rootReducer.js","store/store.js","components/TimeMetrix.jsx","components/HeaderBar.jsx","components/DiscreteSlider.jsx","components/Auth/Signin.jsx","components/Auth/Signup.jsx","components/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["rootReducer","combineReducers","auth","middlewares","thunkMiddlewear","enhancer","applyMiddleware","composedEnhancer","composeWithDevTools","store","createStore","TimeMetrix","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","width","cardSpacing","margin","paper","marginTop","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","submit","SignIn","props","useState","email","setEmail","password","setPassword","Container","component","maxWidth","CssBaseline","Avatar","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","event","target","value","type","FormControlLabel","control","Checkbox","onClick","axios","post","then","response","data","token","localStorage","prodUserToken","catch","error","console","log","Grid","container","justify","item","size","SignUp","firstName","setFirstName","lasttName","setLastName","noValidate","xs","firstname","lastname","Home","App","createMuiTheme","primary","light","dark","ThemeProvider","exact","path","Signin","Signup","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3f6ada43.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\nimport { auth } from \"./auth\";\n\nexport const rootReducer = combineReducers({\n  auth,\n});\n","import { applyMiddleware, createStore } from \"redux\";\nimport thunkMiddlewear from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { rootReducer } from \"./Reducers/rootReducer\";\n\nconst middlewares = [thunkMiddlewear];\nconst middlewareEnhancer = applyMiddleware(...middlewares);\n\nconst enhancer = [middlewareEnhancer];\nconst composedEnhancer = composeWithDevTools(...enhancer);\n\nlet store = createStore(rootReducer, composedEnhancer);\n\nexport default store;\n","import React, { useEffect } from \"react\";\nimport { Calendar } from \"@fullcalendar/core\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\n\nfunction TimeMetrix() {\n  useEffect(() => {\n    document.addEventListener(\"DOMContentLoaded\", function () {\n      var calendarEl = document.getElementById(\"calendar\");\n\n      var calendar = new Calendar(calendarEl, {\n        plugins: [dayGridPlugin],\n      });\n\n      calendar.render();\n    });\n    return () => {};\n  }, []);\n\n  return <div>Cal</div>;\n}\n\nexport default TimeMetrix;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            ExtraProductive\n          </Typography>\n          <Button color=\"inherit\">Login</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { Card } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 300,\n  },\n  cardSpacing: {\n    margin: 10,\n  },\n});\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nexport default function DiscreteSlider(props) {\n  const classes = useStyles();\n\n  const { defaultValue, step, min, max, title } = props;\n\n  return (\n    <div className={classes.root}>\n      <Card raised className={classes.cardSpacing}> \n        <Typography id=\"discrete-slider\" variant=\"h6\">\n          {title}\n        </Typography>\n        <Slider\n          defaultValue={defaultValue}\n          getAriaValueText={valuetext}\n          aria-labelledby=\"discrete-slider\"\n          valueLabelDisplay=\"auto\"\n          step={step}\n          marks\n          min={min}\n          max={max}\n        />\n      </Card>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from 'axios'\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n// import axiosAuth from \"../Service/axios/axiosAuth\";\n// import { displaySignup } from \"../Service/appState\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\nfunction SignIn(props) {\n  const classes = useStyles();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSignin = () => {\n    axios\n      .post(\"http://localhost:8000/user/login\", {\n        email: email,\n        password: password,\n      })\n      .then(function (response) {\n        if (response.data && response.data.token) {\n          localStorage.prodUserToken = response.data.token;\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n  const handleEmailInput = (event) => {\n    setEmail(event.target.value);\n  };\n  const handlePasswordInput = (event) => {\n    setPassword(event.target.value);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={handleEmailInput}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={handlePasswordInput}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={handleSignin}\n          >\n            Sign In\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button\n                size=\"small\"\n                variant=\"text\"\n                color=\"primary\"\n                onClick={() => {\n                  // props.displaySignup(true);\n                }}\n              >\n                Don't have an account? Sign Up!\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nconst mapDispatchToProps = {\n  // displaySignup,\n};\nexport default SignIn;\n// export default connect(null, mapDispatchToProps)(SignIn);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\n\nimport axios from \"axios\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\n// import { displaySignin } from \"../Service/appState\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction SignUp(props) {\n  const classes = useStyles();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lasttName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSignUp = () => {\n    console.log(\"handleSignupClicked\");\n    axios\n      .post(\"http://localhost:8000/user/signup\", {\n        email: email,\n        password: password,\n        firstname: firstName,\n        lastname: lasttName,\n      })\n      .then(function (response) {\n        if (response.data && response.data.token) {\n          localStorage.prodUserToken = response.data.token;\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      {/* <CssBaseline /> */}\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                onChange={(event) => setFirstName(event.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n                onChange={(event) => setLastName(event.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange={(event) => setEmail(event.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={(event) => setPassword(event.target.value)}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={handleSignUp}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Button\n              size=\"small\"\n              variant=\"text\"\n              color=\"primary\"\n              onClick={() => {\n                // props.displaySignin(true);\n              }}\n            >\n              Already Have an Account? Sign In\n            </Button>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nconst mapDispatchToProps = {\n  //displaySignin,\n};\n\nexport default SignUp;\n// export default connect(null, mapDispatchToProps)(SignUp);\n","import React from \"react\";\n\nfunction Home() {\n  return (\n    <div>\n      <h2> Five Choices of Extraordinary Productivity. </h2>\n      <h1> HomePage</h1>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\n\n// import Dashboard from \"./components/Dashboard\";\nimport TimeMetrix from \"./components/TimeMetrix\";\nimport HeaderBar from \"./components/HeaderBar\";\nimport DiscreteSlider from \"./components/DiscreteSlider\";\nimport Signin from \"./components/Auth/Signin\";\nimport Signup from \"./components/Auth/Signup\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Home from \"./components/Home\";\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"#00838f\",\n        light: \"#4fb3bf\",\n        dark: \"#005662\",\n      },\n      secondary: {\n        main: \"#26c6da\",\n        light: \"#6ff9ff\",\n        dark: \"#0095a8\",\n      },\n    },\n  });\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <Router>\n          <div>\n            <HeaderBar />\n          </div>\n          <div className=\"App\">\n            <Switch>\n              <Route component={Home} exact path=\"/\" />\n              <Route component={Signin} path=\"/signin\" />\n              <Route component={Signup} path=\"/signup\" />\n            </Switch>\n          </div>\n        </Router>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}